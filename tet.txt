#!/usr/bin/env bash

MAPA="plik.map"
KATALOG="./dane"
BAZA="test"
SQLTMP="zaladuj_tmp.sql"
DEPENDENCJE="zaleznosci.tmp"
KOLEJNOSC="kolejnosc.tmp"
WSZYSTKIE="tabelki.tmp"
VISITED=".visited"

# 1. Pobierz zależności: CHILD | PARENT
dbaccess "$BAZA" <<EOF > "$DEPENDENCJE"
UNLOAD TO stdout DELIMITER '|'
SELECT c.tabname, p.tabname
FROM systables c
JOIN sysconstraints cc ON cc.tabid = c.tabid
JOIN sysreferences r ON r.constrid = cc.constrid
JOIN sysconstraints pc ON pc.constrid = r.primary
JOIN systables p ON p.tabid = pc.tabid
WHERE cc.constrtype = 'R';
EOF

# 2. Lista wszystkich tabel z pliku mapy
awk -F'|' '{print $2}' "$MAPA" | sort -u > "$WSZYSTKIE"
> "$KOLEJNOSC"
> "$VISITED"

# 3. DFS bez funkcji bash (rekurencja przez plik)
visit() {
  tabela="$1"
  grep -qx "$tabela" "$VISITED" && return
  echo "$tabela" >> "$VISITED"

  awk -F'|' -v p="$tabela" '$2 == p { print $1 }' "$DEPENDENCJE" | while read dziecko; do
    [ -n "$dziecko" ] && visit "$dziecko"
  done

  echo "$tabela" >> "$KOLEJNOSC"
}

# 4. Odpal DFS na wszystkich tabelach
while read tabela; do
  awk -F'|' -v t="$tabela" '$1 == t' "$DEPENDENCJE" | grep -q . || visit "$tabela"
done < "$WSZYSTKIE"

# 5. Stwórz SQL: najpierw TRUNCATE w odwrotnej kolejności
> "$SQLTMP"
awk ' { l[NR]=$0 } END { for (i=NR;i>=1;i--) print "TRUNCATE TABLE " l[i] ";" }' "$KOLEJNOSC" >> "$SQLTMP"

# 6. Dodaj LOAD
while read tabela; do
  grep -F "|$tabela" "$MAPA" | while IFS='|' read -r plik tab; do
    echo "LOAD FROM '$KATALOG/$plik' DELIMITER '|' INSERT INTO $tab;" >> "$SQLTMP"
  done
done < "$KOLEJNOSC"

# 7. Wykonaj
echo "Wykonuję dbaccess z pliku $SQLTMP..."
dbaccess "$BAZA" "$SQLTMP"

# 8. Sprzątanie
rm -f "$VISITED" "$WSZYSTKIE" "$DEPENDENCJE"
